# azure-pipelines/dev-pipeline.yml

trigger:
  branches:
    include:
      - main

variables:
  tf_working_dir: '$(System.DefaultWorkingDirectory)/terraform'
  environment: 'dev'
  terraformVersion: '1.5.5'  # Specify the Terraform version
  azureServiceConnection: 'azurerm'  # Azure service connection name
  backendResourceGroup: 'myTFResourceGroup' # Remote backend Resource Group
  backendStorageAccount: 'fedeflowerstorage'  # Remote backend storage account
  backendContainer: 'tfstate'  # Remote backend storage container
  backendKey: 'terraform.tfstate'  # State file name in remote backend

stages:
  - stage: TerraformDeployment
    jobs:
      - job: PlanAndApply
        pool:
          name: 'Default'
        steps:
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: '$(terraformVersion)'
            displayName: 'Install Terraform'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              backendServiceArm: $(azureServiceConnection)
              backendAzureRmResourceGroupName: $(backendResourceGroup)
              backendAzureRmStorageAccountName: $(backendStorageAccount)
              backendAzureRmContainerName: $(backendContainer)
              backendAzureRmKey: $(backendKey)
              command: 'init'
              workingDirectory: '$(tf_working_dir)'
            displayName: 'Terraform Init'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(tf_working_dir)'
              environmentServiceNameAzureRM: '$(azureServiceConnection)'
              # commandOptions: '-var-file="environments/$(environment)/terraform.tfvars"'
            displayName: 'Terraform Plan'

          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(tf_working_dir)'
              environmentServiceNameAzureRM: '$(azureServiceConnection)'
              commandOptions: '-auto-approve'
              # commandOptions: '-var-file="environments/$(environment)/terraform.tfvars" -auto-approve'
            displayName: 'Terraform Apply'