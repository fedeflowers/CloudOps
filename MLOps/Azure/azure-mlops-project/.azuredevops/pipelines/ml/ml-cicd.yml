trigger:
  branches:
    include:
      - main
  paths:
    include:
      - MLOps/Azure/azure-mlops-project/ml/**
      - MLOps/Azure/azure-mlops-project/.azuredevops/pipelines/ml/**

stages:
  - stage: ML_CI
    displayName: "Machine Learning CI"
    jobs:
      - job: Build
        displayName: "Lint, test, and package ML code"
        pool:
          name: 'Default'
        steps:
          - powershell: |
              $ver  = "3.11.9"
              $url  = "https://www.python.org/ftp/python/$ver/python-$ver-embed-amd64.zip"
              $root = "$(Build.SourcesDirectory)"
              $dest = Join-Path $root ".python"
              $zip  = Join-Path $root "python-$ver.zip"

              New-Item -ItemType Directory -Force -Path $dest | Out-Null
              Invoke-WebRequest -Uri $url -OutFile $zip

              Add-Type -AssemblyName System.IO.Compression.FileSystem
              [IO.Compression.ZipFile]::ExtractToDirectory($zip, $dest, $true)

              # Enable site-packages by ensuring 'import site' is active
              $pth = Get-ChildItem (Join-Path $dest "python*._pth") | Select-Object -First 1
              if ($null -eq $pth) {
                # Fallback: create a minimal _pth file if it wasn't present for any reason
                $pth = Join-Path $dest "python311._pth"
                Set-Content -Path $pth -Value "import site"
              } else {
                (Get-Content $pth.FullName) -replace '^\s*#\s*import site\s*$', 'import site' | Set-Content $pth.FullName
              }

              # Put embeddable Python on PATH for later steps
              Write-Host "##vso[task.setvariable variable=PYTHON_HOME]$dest"
              Write-Host "##vso[task.prependpath]$dest"

              # Bootstrap pip (embeddable doesn't include pip)
              $gp = Join-Path $root "get-pip.py"
              Invoke-WebRequest -Uri "https://bootstrap.pypa.io/get-pip.py" -OutFile $gp
              & "$dest\python.exe" $gp
              & "$dest\python.exe" -m pip --version
            displayName: "Install portable Python 3.11 (embeddable)"
          - script: pip install -r ml/requirements.txt
            displayName: "Install dependencies"
          - script: pip install flake8 pytest
            displayName: "Install dev tools"
          - script: flake8 ml
            displayName: "Lint code"
          - script: pytest ml/tests
            displayName: "Run tests"
          - publish: ml
            artifact: ml_code

  - stage: ML_CD
    displayName: "Machine Learning CD"
    dependsOn: ML_CI
    condition: succeeded()
    jobs:
      - deployment: DeployToAML
        displayName: "Submit AML pipeline"
        environment: aml-prod
        pool:
          name: 'Default'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: ml_code
                - task: UsePythonVersion@0
                  inputs:
                    versionSpec: "3.11"
                - script: pip install -r ml/requirements.txt
                  displayName: "Install ML dependencies"
                - script: pip install azure-ai-ml
                  displayName: "Install Azure ML SDK"
                - script: |
                    python ml/pipeline/submit.py \
                      --workspace $(AML_WS) \
                      --resource-group $(AML_RG)
                  displayName: "Submit AML pipeline job"
