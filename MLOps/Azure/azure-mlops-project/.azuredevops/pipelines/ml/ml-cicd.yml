trigger:
  branches:
    include:
      - main
  paths:
    include:
      - MLOps/Azure/azure-mlops-project/ml/**
      - MLOps/Azure/azure-mlops-project/.azuredevops/pipelines/ml/**

stages:
  - stage: ML_CI
    displayName: "Machine Learning CI"
    jobs:
      - job: Build
        displayName: "Lint, test, and package ML code"
        pool:
          name: 'Default'
        steps:
          - powershell: |
              $ver = "3.11.9"
              $url = "https://www.python.org/ftp/python/$ver/python-$ver-embed-amd64.zip"
              $dest = "$(Build.SourcesDirectory)\.python"
              New-Item -ItemType Directory -Force -Path $dest | Out-Null
              $zip = "$(Build.SourcesDirectory)\python-$ver.zip"
              Invoke-WebRequest -Uri $url -OutFile $zip
              Add-Type -AssemblyName System.IO.Compression.FileSystem
              [IO.Compression.ZipFile]::ExtractToDirectory($zip, $dest)
              # Enable pip in the embeddable by creating/patching pythonXX._pth
              $pth = Get-ChildItem "$dest\python*.pth" | Select-Object -First 1
              (Get-Content $pth) -replace '^\s*#?import site\s*$', 'import site' | Set-Content $pth
              # Put embeddable Python on PATH for subsequent steps
              echo "##vso[task.setvariable variable=PYTHON_HOME]$dest"
              echo "##vso[task.prependpath]$dest"
            displayName: "Install portable Python 3.11 (embeddable)"
          - script: pip install -r ml/requirements.txt
            displayName: "Install dependencies"
          - script: pip install flake8 pytest
            displayName: "Install dev tools"
          - script: flake8 ml
            displayName: "Lint code"
          - script: pytest ml/tests
            displayName: "Run tests"
          - publish: ml
            artifact: ml_code

  - stage: ML_CD
    displayName: "Machine Learning CD"
    dependsOn: ML_CI
    condition: succeeded()
    jobs:
      - deployment: DeployToAML
        displayName: "Submit AML pipeline"
        environment: aml-prod
        pool:
          name: 'Default'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: ml_code
                - task: UsePythonVersion@0
                  inputs:
                    versionSpec: "3.11"
                - script: pip install -r ml/requirements.txt
                  displayName: "Install ML dependencies"
                - script: pip install azure-ai-ml
                  displayName: "Install Azure ML SDK"
                - script: |
                    python ml/pipeline/submit.py \
                      --workspace $(AML_WS) \
                      --resource-group $(AML_RG)
                  displayName: "Submit AML pipeline job"
