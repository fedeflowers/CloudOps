trigger:
  branches:
    include: 
    - main

pr:
  branches:
    include: 
    - main

pool:
  name: 'Default'

variables:
  - group: dev_vars
    TF_FORCE_UNLOCK_ID: ""

stages:
- stage: CI
  displayName: Infra CI (validate & plan)
  jobs:
  - job: TerraformCI
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: $(terraformVersion)

    - task: TerraformTaskV4@4
      displayName: INIT
      inputs:
        provider: azurerm
        backendServiceArm: $(azureServiceConnection)
        backendAzureRmResourceGroupName: $(backendResourceGroup)
        backendAzureRmStorageAccountName: $(backendStorageAccount)
        backendAzureRmContainerName: $(backendContainer)
        backendAzureRmKey: $(backendKey)
        command: init
        workingDirectory: $(workingdir)

    - script: |
            terraform init -input=false
            terraform force-unlock -force $(TF_FORCE_UNLOCK_ID)
      displayName: Terraform force-unlock (manual, if TF_FORCE_UNLOCK_ID set)
      workingDirectory: $(workingdir)
      condition: and(succeeded(), ne(variables['TF_FORCE_UNLOCK_ID'], ''))
          
    - task: TerraformTaskV4@4
      displayName: PLAN
      inputs:
        provider: azurerm
        command: plan
        environmentServiceNameAzureRM: $(azureServiceConnection)
        commandOptions: -out=tfplan -var-file="envs/$(environment)/terraform.tfvars"
        workingDirectory: $(workingdir)

    - script: |
        mkdir -p $(Build.ArtifactStagingDirectory)
        cp $(workingdir)/tfplan $(Build.ArtifactStagingDirectory)/
      displayName: Collect plan artifact

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: tfplan
      displayName: Publish plan artifact

