trigger: none

resources:
  pipelines:
    - pipeline: ci
      source: "CI infra"
      branch: main

pool:
  vmImage: ubuntu-latest

steps:
  # (Optional but safest) use the exact commit from the CI run that produced the plan
  - checkout: self
    persistCredentials: true

  - script: |
      set -e
      git fetch --all --prune
      echo "Checking out CI commit: $(resources.pipeline.ci.sourceCommit)"
      git checkout $(resources.pipeline.ci.sourceCommit)
      git rev-parse --short HEAD
    displayName: Checkout CI commit

  # Download the tfplan artifact from CI
  - download: ci
    artifact: tfplan
    displayName: Download tfplan artifact

  - task: TerraformInstaller@0
    displayName: Install Terraform
    inputs:
      terraformVersion: $(terraformVersion)

  - task: TerraformTaskV4@4
    displayName: INIT (same backend as CI)
    inputs:
      provider: azurerm
      backendServiceArm: $(azureServiceConnection)
      backendAzureRmResourceGroupName: $(backendResourceGroup)
      backendAzureRmStorageAccountName: $(backendStorageAccount)
      backendAzureRmContainerName: $(backendContainer)
      backendAzureRmKey: $(backendKey)
      command: init
      workingDirectory: $(workingdir)

  # Apply the exact reviewed plan file (no prompt)
  - task: TerraformTaskV4@4
    displayName: APPLY saved plan
    inputs:
      provider: azurerm
      command: apply
      environmentServiceNameAzureRM: $(azureServiceConnection)
      commandOptions: '$(Pipeline.Workspace)/ci/tfplan/tfplan'
      workingDirectory: $(workingdir)
