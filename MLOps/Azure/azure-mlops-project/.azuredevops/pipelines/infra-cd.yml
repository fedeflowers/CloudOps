trigger: none

pool:
  name: 'Default'

variables:
  - group: dev_vars

stages:
- stage: CD
  displayName: Infra CD (apply)
  # Optional: require manual approval in DevOps Environments
  # environment: 'infra-dev'   # configure approvals in Project Settings â†’ Environments
  jobs:
  - job: TerraformApply
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: $(terraformVersion)

    # Option 1: Re-init and re-plan, then apply the saved plan file in workspace
    - task: TerraformTaskV4@4
      displayName: INIT
      inputs:
        provider: azurerm
        backendServiceArm: $(azureServiceConnection)
        backendAzureRmResourceGroupName: $(backendResourceGroup)
        backendAzureRmStorageAccountName: $(backendStorageAccount)
        backendAzureRmContainerName: $(backendContainer)
        backendAzureRmKey: $(backendKey)
        command: init
        workingDirectory: $(workingdir)

    - task: TerraformTaskV4@4
      displayName: PLAN (CD)
      inputs:
        provider: azurerm
        command: plan
        environmentServiceNameAzureRM: $(azureServiceConnection)
        commandOptions: -out=tfplan -var-file="envs/$(environment)/terraform.tfvars"
        workingDirectory: $(workingdir)

    - task: TerraformTaskV4@4
      displayName: APPLY
      inputs:
        provider: azurerm
        command: apply
        environmentServiceNameAzureRM: $(azureServiceConnection)
        commandOptions: tfplan -input=false -auto-approve
        workingDirectory: $(workingdir)
